@page "/pet/admin/show/{id:long}"
@inject IPetsData PetsData

<div class="bg-white shadow overflow-hidden sm:rounded-lg">
    <div class="px-4 py-5 sm:px-6">
        <h3 class="text-lg leading-6 font-medium text-gray-900">
            Pet Information
        </h3>
        <p class="mt-1 max-w-2xl text-sm text-gray-500">
            Information about current pet.
        </p>
    </div>
    <div class="border-t border-gray-200 px-4 py-5 sm:p-0">
        <dl class="sm:divide-y sm:divide-gray-200">
            <div class="py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                <dt class="text-sm font-medium text-gray-500">
                    Pet ID
                </dt>
                <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">@(pet.id)</dd>
            </div>
            <div class="py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                <dt class="text-sm font-medium text-gray-500">
                    Child Image Link
                </dt>
                <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">@(pet.childlink)</dd>
            </div>
            <div class="py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                <dt class="text-sm font-medium text-gray-500">
                    Adult Image Link
                </dt>
                <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2" style="word-wrap: break-word">@(pet.adultlink)</dd>
            </div>
            <img src="@(pet.adultlink)" />
        </dl>
    </div>
</div>

@code {
    [Parameter]
    public long id { get; set; } = 1;

    Pets pet = new Pets();

    protected override async Task OnInitializedAsync()
    {
        pet = await PetsData.GetPet(id);
    }
}