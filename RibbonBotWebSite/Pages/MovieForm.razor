@using System.ComponentModel.DataAnnotations
@inject ISnackbar Snackbar
@inject IMovieData MovieData

<MudPaper>
    <MudGrid>
        <MudItem xs="6">
            <MudTextField @bind-Value="movieTitle" Label="Movie" Variant="Variant.Outlined" Required="true"></MudTextField>
        </MudItem>
        <MudItem xs="6">
            <MudSwitch T="bool" @bind-Checked="afterDark" Label="After Dark" Color="Color.Success"/>
        </MudItem>
    </MudGrid>
</MudPaper>
<br/>
<MudSpacer/>
<MudButton Disabled="@processing" OnClick="SubmitMovie" Variant="Variant.Filled" Color="Color.Primary">
    @if (processing)
    {
        <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
        <MudText Class="ms-2">Processing</MudText>
    }
    else
    {
        <MudText>Add Movie</MudText>
    }

</MudButton>
<MudSpacer />


@code {

    [Parameter]
    public EventCallback<MouseEventArgs> ParentMethod { get; set; }

    private bool processing = false;
    public bool afterDark { get; set; } = false;

    [Required]
    public string movieTitle { get; set; }

    private async void SubmitMovie()
    {
        processing = true;
        if (afterDark)
        {
            await MovieData.AddMovie(movieTitle, afterDark);
        }
        else
        {
            await MovieData.AddMovie(movieTitle);   
        }
        Snackbar.Add(movieTitle + " added to request list.", Severity.Success);
        movieTitle = "";
        processing = false;
        await ParentMethod.InvokeAsync();
    }

}
